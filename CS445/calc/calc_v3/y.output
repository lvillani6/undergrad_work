Terminals unused in grammar

   EOS


State 13 conflicts: 2 shift/reduce
State 14 conflicts: 2 shift/reduce


Grammar

    0 $accept: expr_list $end

    1 expr_list: expr_list expr '\n'
    2          | expr '\n'

    3 expr: expr ADDOP expr
    4     | expr MULOP expr
    5     | '(' expr ')'
    6     | NUM


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'(' (40) 5
')' (41) 5
error (256)
EOS (258)
NUM (259) 6
ADDOP (260) 3
MULOP (261) 4


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
expr_list (11)
    on left: 1 2, on right: 0 1
expr (12)
    on left: 3 4 5 6, on right: 1 2 3 4 5


State 0

    0 $accept: . expr_list $end

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    expr_list  go to state 3
    expr       go to state 4


State 1

    6 expr: NUM .

    $default  reduce using rule 6 (expr)


State 2

    5 expr: '(' . expr ')'

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 5


State 3

    0 $accept: expr_list . $end
    1 expr_list: expr_list . expr '\n'

    $end  shift, and go to state 6
    NUM   shift, and go to state 1
    '('   shift, and go to state 2

    expr  go to state 7


State 4

    2 expr_list: expr . '\n'
    3 expr: expr . ADDOP expr
    4     | expr . MULOP expr

    ADDOP  shift, and go to state 8
    MULOP  shift, and go to state 9
    '\n'   shift, and go to state 10


State 5

    3 expr: expr . ADDOP expr
    4     | expr . MULOP expr
    5     | '(' expr . ')'

    ADDOP  shift, and go to state 8
    MULOP  shift, and go to state 9
    ')'    shift, and go to state 11


State 6

    0 $accept: expr_list $end .

    $default  accept


State 7

    1 expr_list: expr_list expr . '\n'
    3 expr: expr . ADDOP expr
    4     | expr . MULOP expr

    ADDOP  shift, and go to state 8
    MULOP  shift, and go to state 9
    '\n'   shift, and go to state 12


State 8

    3 expr: expr ADDOP . expr

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 13


State 9

    4 expr: expr MULOP . expr

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    expr  go to state 14


State 10

    2 expr_list: expr '\n' .

    $default  reduce using rule 2 (expr_list)


State 11

    5 expr: '(' expr ')' .

    $default  reduce using rule 5 (expr)


State 12

    1 expr_list: expr_list expr '\n' .

    $default  reduce using rule 1 (expr_list)


State 13

    3 expr: expr . ADDOP expr
    3     | expr ADDOP expr .
    4     | expr . MULOP expr

    ADDOP  shift, and go to state 8
    MULOP  shift, and go to state 9

    ADDOP     [reduce using rule 3 (expr)]
    MULOP     [reduce using rule 3 (expr)]
    $default  reduce using rule 3 (expr)


State 14

    3 expr: expr . ADDOP expr
    4     | expr . MULOP expr
    4     | expr MULOP expr .

    ADDOP  shift, and go to state 8
    MULOP  shift, and go to state 9

    ADDOP     [reduce using rule 4 (expr)]
    MULOP     [reduce using rule 4 (expr)]
    $default  reduce using rule 4 (expr)
